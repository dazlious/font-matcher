{"version":3,"sources":["helpers.js","App.js","index.js"],"names":["toPx","num","clamp","min","max","Math","renderDelay","time","Promise","resolve","setTimeout","DEFAULT_TEXT","canvasTxt","vAlign","align","justify","PIXELMATCH_OPTIONS","threshold","includeAA","diffMask","CANVAS_WIDTH","CANVAS_HEIGHT","DEFAULT_LETTER_SPACING","DEFAULT_WORD_SPACING","DEFAULT_FALLBACK_FAMILY","BG_COLOR_WHITE","BG_COLOR_BLACK","BG_COLOR_FALLBACK","BG_COLOR_WEBFONT","CANVAS_FRAME_FULL","CANVAS_FRAME_TEXT","getImageData","canvas","ctx1","getContext","data","createEmptyDiff","diffCtx","clearRect","createImageData","drawColoredRect","color","ctx","fillStyle","fillRect","draw","txt","bgColor","fontFamily","fontSize","lineHeight","letterSpacing","wordSpacing","style","font","Number","drawText","drawResult","originalFont","fallbackFont","drawFallbackWithSettings","originalImage","fallbackRef","diffRef","text","textSettings","bgFallbackColor","current","fallbackImage","diff","result","pixelmatch","App","useState","webfontFamily","setWebfontFamily","fallbackFamily","setFallbackFamily","setText","setFontSize","setLineHeight","drawAreaRef","useRef","resultRef","webfontRef","useEffect","onMatch","a","progress","display","opacity","basicFontSettings","fallbackFontSettings","webFontSettings","LETTER_SPACING_BOUNDARIES","lsFrom","lsTo","WORD_SPACING_BOUNDARIES","anchorStepSize","currentStepSizeX","currentStepSizeY","wsTo","wsFrom","x","y","arr","map","round","reduce","acc","curr","res","localMin","localMinIndex","indexOf","nextMin","putImageData","innerText","JSON","stringify","pow","onChange","changeHandler","value","target","className","htmlFor","onBlur","bind","id","type","defaultValue","accept","e","file","callback","name","split","fontFaceName","url","URL","createObjectURL","document","createElement","textContent","head","appendChild","uploadFontFace","files","onClick","ref","width","height","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a1f5ee03.chunk.js","sourcesContent":["export const toPx = (num) => `${num}px`;\n\nexport const clamp = (num, min, max) => Math.min(Math.max(num, min), max);\n\nexport const renderDelay = (time = 1000) => new Promise((resolve) => setTimeout(resolve, time));\n","import React, { useEffect, useRef, useState } from 'react';\nimport canvasTxt from 'canvas-txt';\nimport pixelmatch from 'pixelmatch';\n\nimport { toPx, clamp, renderDelay } from './helpers';\n\nimport './App.scss';\n\nconst DEFAULT_TEXT =\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.';\n\nconst ONE_FRAME = 1 / 60;\nconst TEN_FRAMES = 10 * ONE_FRAME;\n\ncanvasTxt.vAlign = 'top';\ncanvasTxt.align = 'left';\ncanvasTxt.justify = false;\n\nconst PIXELMATCH_OPTIONS = {\n  threshold: 0.2,\n  includeAA: true,\n  diffMask: false,\n};\n\nconst CANVAS_PADDING_X = 20;\nconst CANVAS_PADDING_Y = 20;\n\nconst CANVAS_WIDTH = 500;\nconst CANVAS_HEIGHT = 400;\n\nconst DEFAULT_LETTER_SPACING = '0px';\nconst DEFAULT_WORD_SPACING = '0px';\nconst DEFAULT_WEBFONT_FAMILY = 'Georgia';\nconst DEFAULT_FALLBACK_FAMILY = 'Times New Roman';\nconst DEFAULT_FONT_SIZE = 20;\nconst DEFAULT_LINE_HEIGHT = 1.1;\n\nconst BG_COLOR_WHITE = '#fff';\nconst BG_COLOR_RED = '#ff0000';\nconst BG_COLOR_BLACK = '#000';\nconst BG_COLOR_FALLBACK = '#FFF9B3';\nconst BG_COLOR_WEBFONT = '#B3FFCB';\n\nconst CANVAS_FRAME_FULL = [0, 0, CANVAS_WIDTH, CANVAS_HEIGHT];\n\nconst CANVAS_FRAME_TEXT = [\n  CANVAS_PADDING_X,\n  CANVAS_PADDING_Y,\n  CANVAS_WIDTH - CANVAS_PADDING_X * 2,\n  CANVAS_HEIGHT - CANVAS_PADDING_Y * 2,\n];\n\nconst getImageData = (canvas) => {\n  const ctx1 = canvas.getContext('2d');\n  return ctx1.getImageData(...CANVAS_FRAME_FULL).data;\n};\n\nconst createEmptyDiff = (canvas) => {\n  const diffCtx = canvas.getContext('2d');\n  diffCtx.clearRect(...CANVAS_FRAME_FULL);\n  return diffCtx.createImageData(CANVAS_WIDTH, CANVAS_HEIGHT);\n};\n\nconst drawDiff = (canvas, data) => {\n  const ctx = canvas.getContext('2d');\n  ctx.putImageData(data, 0, 0);\n};\n\nconst drawColoredRect = (canvas, color = BG_COLOR_WHITE) => {\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(...CANVAS_FRAME_FULL);\n  ctx.fillStyle = color;\n  ctx.fillRect(...CANVAS_FRAME_FULL);\n};\n\nconst draw = (\n  canvas,\n  txt,\n  { fontFamily, fontSize, lineHeight, letterSpacing = DEFAULT_LETTER_SPACING, wordSpacing = DEFAULT_WORD_SPACING },\n  bgColor,\n) => {\n  const ctx = canvas.getContext('2d');\n  drawColoredRect(canvas, bgColor);\n  canvas.style.letterSpacing = letterSpacing;\n  canvas.style.wordSpacing = wordSpacing;\n  ctx.fillStyle = BG_COLOR_BLACK;\n  canvasTxt.font = fontFamily;\n  canvasTxt.fontSize = Number(fontSize);\n  canvasTxt.lineHeight = Number(lineHeight) * Number(fontSize);\n  canvasTxt.drawText(ctx, txt, ...CANVAS_FRAME_TEXT);\n};\n\nconst drawResult = (\n  canvas,\n  txt,\n  originalFont,\n  fallbackFont,\n  { fontSize, lineHeight, letterSpacing = DEFAULT_LETTER_SPACING, wordSpacing = DEFAULT_WORD_SPACING },\n) => {\n  const ctx = canvas.getContext('2d');\n  drawColoredRect(canvas, BG_COLOR_WHITE);\n  ctx.fillStyle = BG_COLOR_BLACK;\n  canvas.style.letterSpacing = DEFAULT_LETTER_SPACING;\n  canvas.style.wordSpacing = DEFAULT_WORD_SPACING;\n  canvasTxt.font = originalFont;\n  canvasTxt.fontSize = Number(fontSize);\n  canvasTxt.lineHeight = Number(lineHeight) * Number(fontSize);\n  canvasTxt.drawText(ctx, txt, ...CANVAS_FRAME_TEXT);\n\n  canvas.style.letterSpacing = letterSpacing;\n  canvas.style.wordSpacing = wordSpacing;\n  ctx.fillStyle = BG_COLOR_RED;\n  canvasTxt.font = fallbackFont;\n  canvasTxt.fontSize = Number(fontSize);\n  canvasTxt.lineHeight = Number(lineHeight) * Number(fontSize);\n  canvasTxt.drawText(ctx, txt, ...CANVAS_FRAME_TEXT);\n};\n\nconst drawFallbackWithSettings = (\n  originalImage,\n  fallbackRef,\n  diffRef,\n  text,\n  textSettings,\n  bgFallbackColor = BG_COLOR_FALLBACK,\n) => {\n  draw(fallbackRef.current, text, textSettings, bgFallbackColor);\n  const fallbackImage = getImageData(fallbackRef.current);\n  const diff = createEmptyDiff(diffRef.current);\n\n  const result = pixelmatch(originalImage, fallbackImage, diff.data, CANVAS_WIDTH, CANVAS_HEIGHT, PIXELMATCH_OPTIONS);\n\n  return [result, diff];\n};\n\nconst uploadFontFace = (file, callback) => {\n  const { name } = file;\n\n  const [fontFaceName] = name.split('.');\n  const url = URL.createObjectURL(file);\n\n  const style = document.createElement('style');\n\n  style.textContent = `\n      @font-face {\n        font-family: \"${fontFaceName}\";\n        src: url(${JSON.stringify(url)});\n      }\n    `;\n\n  document.head.appendChild(style);\n\n  callback(fontFaceName);\n};\n\nconst App = () => {\n  const [webfontFamily, setWebfontFamily] = useState(DEFAULT_WEBFONT_FAMILY);\n  const [fallbackFamily, setFallbackFamily] = useState(DEFAULT_FALLBACK_FAMILY);\n\n  const [text, setText] = useState(DEFAULT_TEXT);\n  const [fontSize, setFontSize] = useState(DEFAULT_FONT_SIZE);\n  const [lineHeight, setLineHeight] = useState(DEFAULT_LINE_HEIGHT);\n\n  const drawAreaRef = useRef(null);\n  const resultRef = useRef(null);\n  const diffRef = useRef(null);\n  const webfontRef = useRef(null);\n  const fallbackRef = useRef(null);\n\n  useEffect(() => {\n    drawColoredRect(diffRef.current);\n  }, []);\n\n  useEffect(() => {\n    draw(webfontRef.current, text, { fontFamily: webfontFamily, fontSize, lineHeight }, BG_COLOR_WEBFONT);\n  }, [webfontFamily, fontSize, lineHeight, text]);\n\n  useEffect(() => {\n    draw(fallbackRef.current, text, { fontFamily: fallbackFamily, fontSize, lineHeight }, BG_COLOR_FALLBACK);\n  }, [fallbackFamily, fontSize, lineHeight, text]);\n\n  const onMatch = async () => {\n    let progress = 0;\n    drawAreaRef.current.style.display = 'block';\n    diffRef.current.style.opacity = 1;\n\n    drawColoredRect(webfontRef.current);\n    const basicFontSettings = { fontSize, lineHeight };\n    const fallbackFontSettings = { ...basicFontSettings, fontFamily: fallbackFamily };\n    const webFontSettings = { ...basicFontSettings, fontFamily: webfontFamily };\n\n    draw(webfontRef.current, text, webFontSettings, BG_COLOR_WEBFONT);\n    const originalImage = getImageData(webfontRef.current);\n\n    const LETTER_SPACING_BOUNDARIES = Number(fontSize) * 0.3;\n\n    const lsFrom = -LETTER_SPACING_BOUNDARIES;\n    const lsTo = LETTER_SPACING_BOUNDARIES;\n\n    const WORD_SPACING_BOUNDARIES = Number(fontSize) * 0.3;\n\n    const wsFrom = -WORD_SPACING_BOUNDARIES;\n    const wsTo = WORD_SPACING_BOUNDARIES;\n\n    const anchorStepSize = 0.01;\n    let currentStepSizeX = (lsTo - lsFrom) / 10;\n    let currentStepSizeY = (wsTo - wsFrom) / 10;\n\n    let current = { x: 0, y: 0 };\n    while (currentStepSizeX > anchorStepSize && currentStepSizeY > anchorStepSize) {\n      const arr = [\n        { x: current.x, y: current.y - currentStepSizeY },\n        { x: current.x - currentStepSizeX, y: current.y },\n        { x: current.x, y: current.y },\n        { x: current.x + currentStepSizeX, y: current.y },\n        { x: current.x, y: current.y + currentStepSizeY },\n      ].map(({ x, y }) => ({\n        x: Math.round(clamp(x, lsFrom, lsTo) * 100) / 100,\n        y: Math.round(clamp(y, wsFrom, wsTo) * 100) / 100,\n      }));\n\n      const [res, diff] = arr\n        .map(({ x, y }) =>\n          drawFallbackWithSettings(originalImage, fallbackRef, diffRef, text, {\n            ...fallbackFontSettings,\n            letterSpacing: toPx(x),\n            wordSpacing: toPx(y),\n          }),\n        )\n        .reduce(\n          (acc, curr) => [\n            [...acc[0], curr[0]],\n            [...acc[1], curr[1]],\n          ],\n          [[], []],\n        );\n\n      const localMin = Math.min(...res);\n\n      const localMinIndex = res.indexOf(localMin);\n\n      const nextMin = arr[localMinIndex];\n\n      if (current !== nextMin) {\n        drawDiff(diffRef.current, diff[localMinIndex]);\n        resultRef.current.innerText = `In Progress\\nMinimization Round ${progress}\\n${JSON.stringify({\n          letterSpacing: toPx(nextMin.x),\n          wordSpacing: toPx(nextMin.y),\n        })}`;\n        await renderDelay(TEN_FRAMES);\n      }\n\n      current = nextMin;\n      progress++;\n\n      currentStepSizeX *= Math.pow(0.999, progress);\n      currentStepSizeY *= Math.pow(0.999, progress);\n    }\n\n    const { x, y } = current;\n\n    drawResult(diffRef.current, text, webfontFamily, fallbackFamily, {\n      ...basicFontSettings,\n      letterSpacing: toPx(x),\n      wordSpacing: toPx(y),\n    });\n\n    resultRef.current.innerText = `Done\\nMinimization Round ${progress}\\n${JSON.stringify({\n      letterSpacing: toPx(x),\n      wordSpacing: toPx(y),\n    })}`;\n  };\n\n  const onChange = (changeHandler, { target: { value } }) => {\n    changeHandler(() => value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1 className=\"headline\">Auto Fallback Font Matcher</h1>\n        <p>\n          <em>* only tested in Chrome</em>\n        </p>\n      </header>\n      <main className=\"content\">\n        <div className=\"config mb-4\">\n          <div className=\"row mb-4\">\n            <div className=\"config-field col-6\">\n              <label htmlFor=\"line-height\" className=\"form-label\">\n                Line Height\n              </label>\n              <input\n                onBlur={onChange.bind(null, setLineHeight)}\n                className=\"form-control\"\n                id=\"line-height\"\n                type=\"number\"\n                defaultValue={DEFAULT_LINE_HEIGHT}\n              />\n            </div>\n            <div className=\"config-field col-6\">\n              <label htmlFor=\"font-size\" className=\"form-label\">\n                Font Size\n              </label>\n              <input\n                onBlur={onChange.bind(null, setFontSize)}\n                className=\"form-control\"\n                id=\"font-size\"\n                type=\"number\"\n                defaultValue={DEFAULT_FONT_SIZE}\n              />\n            </div>\n          </div>\n          <div className=\"config-field col-12\">\n            <label className=\"form-label\" htmlFor=\"font-text\">\n              Text\n            </label>\n            <textarea\n              onBlur={onChange.bind(null, setText)}\n              className=\"form-control text\"\n              id=\"font-text\"\n              defaultValue={DEFAULT_TEXT}\n            />\n          </div>\n          <hr className=\"my-4\" />\n          <div className=\"row mb-4\">\n            <div className=\"config-field col-6\">\n              <label htmlFor=\"font-webfont\" className=\"form-label\">\n                Webfont Family\n              </label>\n              <div className=\"input-group\">\n                <input\n                  style={{ fontFamily: webfontFamily }}\n                  className=\"form-control\"\n                  id=\"font-webfont\"\n                  type=\"text\"\n                  value={webfontFamily}\n                  onChange={onChange.bind(null, setWebfontFamily)}\n                  onBlur={onChange.bind(null, setWebfontFamily)}\n                />\n                <label htmlFor=\"uploadFont\" className=\"input-group-text upload-icon btn-primary\">\n                  <input\n                    type=\"file\"\n                    accept=\".ttf,.otf,.woff,.woff2,.svg\"\n                    className=\"uploadFont\"\n                    onChange={(e) => {\n                      uploadFontFace(e.target.files[0], setWebfontFamily);\n                    }}\n                    id=\"uploadFont\"\n                  />\n                  <span>&#8683;</span>\n                </label>\n              </div>\n            </div>\n            <div className=\"config-field col-6\">\n              <label htmlFor=\"font-fallback\" className=\"form-label\">\n                Fallback Family\n              </label>\n              <input\n                style={{ fontFamily: fallbackFamily }}\n                className=\"form-control\"\n                id=\"font-fallback\"\n                type=\"text\"\n                defaultValue={DEFAULT_FALLBACK_FAMILY}\n                onBlur={onChange.bind(null, setFallbackFamily)}\n              />\n            </div>\n          </div>\n          <button className=\"btn btn-primary\" onClick={onMatch}>\n            Start Auto Match\n          </button>\n        </div>\n        <div className=\"result mb-4\" ref={resultRef} />\n        <div ref={drawAreaRef} className=\"drawArea\">\n          <canvas ref={webfontRef} className=\"canvas\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT} id=\"webfont\" />\n          <canvas ref={fallbackRef} className=\"canvas\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT} id=\"fallback\" />\n          <canvas ref={diffRef} className=\"canvas\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT} id=\"diff\" />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './reset.css';\nimport 'bootstrap/scss/bootstrap.scss';\nimport './index.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}